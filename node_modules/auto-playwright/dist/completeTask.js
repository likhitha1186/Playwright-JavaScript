"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.completeTask = void 0;
const openai_1 = require("openai");
const prompt_1 = require("./prompt");
const createActions_1 = require("./createActions");
const defaultDebug = process.env.AUTO_PLAYWRIGHT_DEBUG === "true";
const completeTask = async (page, task) => {
    const openai = new openai_1.default({
        apiKey: task.options?.openaiApiKey,
        baseURL: task.options?.openaiBaseUrl,
        defaultQuery: task.options?.openaiDefaultQuery,
        defaultHeaders: task.options?.openaiDefaultHeaders,
    });
    let lastFunctionResult = null;
    const actions = (0, createActions_1.createActions)(page);
    const debug = task.options?.debug ?? defaultDebug;
    const runner = openai.beta.chat.completions
        .runTools({
        model: task.options?.model ?? "gpt-4o",
        messages: [{ role: "user", content: (0, prompt_1.prompt)(task) }],
        tools: Object.values(actions).map((action) => ({
            type: "function",
            function: action,
        })),
    })
        .on("message", (message) => {
        if (debug) {
            console.log("> message", message);
        }
        if (message.role === "assistant" &&
            message.tool_calls &&
            message.tool_calls.length > 0 &&
            message.tool_calls[0].function.name.startsWith("result")) {
            lastFunctionResult = JSON.parse(message.tool_calls[0].function.arguments);
        }
    });
    const finalContent = await runner.finalContent();
    if (debug) {
        console.log("> finalContent", finalContent);
    }
    if (!lastFunctionResult) {
        throw new Error("Expected to have result");
    }
    if (debug) {
        console.log("> lastFunctionResult", lastFunctionResult);
    }
    return lastFunctionResult;
};
exports.completeTask = completeTask;
