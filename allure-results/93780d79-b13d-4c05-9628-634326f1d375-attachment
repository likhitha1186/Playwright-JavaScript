# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: fail() - Annotations
- Location: C:\Users\likhithap\WebstormProjects\PlaywrightAutomation\src\tests\Annotations\test1.spec.js:44:6

# Error details

```
Error: Timed out 5000ms waiting for expect(locator).toHaveTitle(expected)

Locator: locator(':root')
Expected string: "Products"
Received string: "Swag Labs"
Call log:
  - expect.toHaveTitle with timeout 5000ms
  - waiting for locator(':root')
    9 × locator resolved to <html lang="en">…</html>
      - unexpected value "Swag Labs"

    at C:\Users\likhithap\WebstormProjects\PlaywrightAutomation\src\tests\Annotations\test1.spec.js:56:22
```

# Page snapshot

```yaml
- text: Swag Labs
- textbox "Username": locked_out_user
- textbox "Password": secret_sauce
- 'heading "Epic sadface: Sorry, this user has been locked out." [level=3]':
  - button
  - text: "Epic sadface: Sorry, this user has been locked out."
- button "Login"
- heading "Accepted usernames are:" [level=4]
- text: standard_user locked_out_user problem_user performance_glitch_user error_user visual_user
- heading "Password for all users:" [level=4]
- text: secret_sauce
```

# Test source

```ts
   1 | import { test, expect } from '@playwright/test';
   2 |
   3 | test('Playwright Annotations', async ({ page }) => {
   4 |   await page.goto('https://www.saucedemo.com/ ');
   5 |   await page.waitForTimeout(1000);
   6 |
   7 |   await expect(page).toHaveTitle('Swag Labs');
   8 |
   9 |   await page.fill('#user-name', 'standard_user');
  10 |   await page.fill('#password', 'secret_sauce');
  11 |   await page.click('#login-button');
  12 |
  13 |   await page.waitForTimeout(1000);
  14 | });
  15 |
  16 | test.skip('skip() - Annotations', async ({ page }) => {
  17 |   await page.goto('https://www.saucedemo.com/ ');
  18 |   await page.waitForTimeout(1000);
  19 |
  20 |   await expect(page).toHaveTitle('Swag Labs');
  21 |
  22 |   await page.fill('#user-name', 'standard_user');
  23 |   await page.fill('#password', 'secret_sauce');
  24 |   await page.click('#login-button');
  25 |
  26 |   await page.waitForTimeout(1000);
  27 | });
  28 |
  29 | test.fail('Annotations', async ({ page }) => {
  30 |   await page.goto('https://www.saucedemo.com/ ');
  31 |   await page.waitForTimeout(1000);
  32 |
  33 |   await expect(page).toHaveTitle('Swag Labs');
  34 |
  35 |   await page.fill('#user-name', 'locked_out_user');
  36 |   await page.fill('#password', 'secret_sauce');
  37 |   await page.click('#login-button');
  38 |
  39 |   await page.waitForTimeout(1000);
  40 |
  41 |   await page.click('#add-to-cart-sauce-labs-backpack');
  42 | });
  43 |
  44 | test.fail('fail() - Annotations', async ({ page }) => {
  45 |   await page.goto('https://www.saucedemo.com/ ');
  46 |   await page.waitForTimeout(1000);
  47 |
  48 |   await expect(page).toHaveTitle('Swag Labs');
  49 |
  50 |   await page.fill('#user-name', 'locked_out_user');
  51 |   await page.fill('#password', 'secret_sauce');
  52 |   await page.click('#login-button');
  53 |
  54 |   await page.waitForTimeout(1000);
  55 |
> 56 |   await expect(page).toHaveTitle('Products');
     |                      ^ Error: Timed out 5000ms waiting for expect(locator).toHaveTitle(expected)
  57 | });
  58 |
  59 | test("fixme() - Annotations", async ({ page }) => {
  60 |
  61 | })
```