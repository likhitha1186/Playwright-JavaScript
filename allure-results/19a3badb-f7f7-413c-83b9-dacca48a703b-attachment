# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Click existing card
- Location: C:\Users\likhithap\WebstormProjects\PlaywrightAutomation\tests\TrelloBoard\Templates\E2E-Tests\1-on-1MeetingAgenda.spec.js:46:1

# Error details

```
Error: locator.click: Error: strict mode violation: locator('//a[contains(@title, \'1-on-1 Meeting Agenda\')]') resolved to 3 elements:
    1) <a draggable="false" title="1-on-1 Meeting Agenda" aria-label="1-on-1 Meeting Agenda" class="cZx7p8hAQGLEz5 l7ix_KdG4LuugK" href="/b/y0G4U3rB/1-on-1-meeting-agenda">1-on-1 Meeting Agenda</a> aka getByRole('link', { name: '-on-1 Meeting Agenda' }).first()
    2) <a draggable="false" title="1-on-1 Meeting Agenda" aria-label="1-on-1 Meeting Agenda" class="cZx7p8hAQGLEz5 l7ix_KdG4LuugK" href="/b/a6hLGXES/1-on-1-meeting-agenda">1-on-1 Meeting Agenda</a> aka getByRole('link', { name: '-on-1 Meeting Agenda' }).nth(1)
    3) <a draggable="false" class="cZx7p8hAQGLEz5 l7ix_KdG4LuugK" href="/b/sHugO9IN/1-on-1-meeting-agenda" title="1-on-1 Meeting Agenda (currently active)" aria-label="1-on-1 Meeting Agenda (currently active)">1-on-1 Meeting Agenda</a> aka getByRole('link', { name: '1-on-1 Meeting Agenda (' })

Call log:
  - waiting for locator('//a[contains(@title, \'1-on-1 Meeting Agenda\')]')

    at OneOnOneMeetingAgendaTemplate.deleteCreatedBoard (C:\Users\likhithap\WebstormProjects\PlaywrightAutomation\tests\TrelloBoard\Templates\Page\OneOnOneMeetingAgendaPage.js:194:91)
    at C:\Users\likhithap\WebstormProjects\PlaywrightAutomation\tests\TrelloBoard\Templates\E2E-Tests\1-on-1MeetingAgenda.spec.js:56:25
```

# Test source

```ts
   94 |         await this.page.waitForTimeout(2000);
   95 |         await this.page.keyboard.press('Enter');
   96 |     }
   97 |
   98 |     async addMembersAction(){
   99 |         await this.membersButton.click()
  100 |       await this.page.getByLabel('Search members').fill('Likhitha');
  101 |       await this.page.keyboard.press('Enter');
  102 |       await this.page.locator("//button[@aria-label='Close popover']").click();
  103 |     }
  104 |
  105 |     async addLabelsAction(labelName){
  106 |         await this.labelsButton.click();
  107 |         const CreateNewLabel = await this.page.getByText('Create a new label');
  108 |         const TitleField = await this.page.locator("//div[@class='q2PzD_Dkq1FVX3 pt-0']//input[@type='text']")
  109 |         const CreateButton = await this.page.locator("//button[contains(text(),'Create')]")
  110 |         const allLabels= await this.page.locator("//ul[@class='AEgIEBHcUVGEym']//li");
  111 |         await HandlingLabelsElements(allLabels, labelName, CreateNewLabel, TitleField, CreateButton)
  112 |         await this.page.getByTestId('popover-close').click()
  113 |     }
  114 |
  115 |     async addCheckList(addChecklistItems){
  116 |         await this.checklistButton.click();
  117 |         for (const item of addChecklistItems) {
  118 |             await this.page.locator("//button[normalize-space()='Add']").click();
  119 |             await this.page.getByLabel('Add an item').fill(item);
  120 |             await this.page.keyboard.press('Enter');
  121 |             await this.page.waitForTimeout(1000);
  122 |         }
  123 |     }
  124 |
  125 |     async checkTheAddedCheckList() {
  126 |         const options = await this.page.$$("//ul[@data-testid='checklist-items']//div[@class='DqgZ76in2cc5Jp']//*[name()='svg']");
  127 |         await options[0].click();
  128 |         await this.page.waitForTimeout(1000);
  129 |     }
  130 |
  131 |     async addDates(){
  132 |         await this.datesButton.click();
  133 |         await this.page.waitForTimeout(5000);
  134 |         await this.datesButton.click();
  135 |         await this.page.getByTestId('card-back-due-date-button').click();
  136 |         await this.page.getByTestId('date-range-picker-with-ads').locator('svg').nth(3).uncheck();
  137 |         await this.page.getByTestId('date-range-picker-with-ads').locator('svg').nth(2).check();
  138 |         await this.page.getByRole('button', { name: '4, Tuesday March 2025' }).click();
  139 |         await this.page.getByTestId('date-range-picker-with-ads').locator('svg').nth(3).check();
  140 |         await this.page.getByRole('button', { name: '3, Thursday April 2025' }).click();
  141 |         this.page.locator("//div[@class='ZLkHQZu7HZZj5h']//button[1]").click()
  142 |     }
  143 |
  144 |     // selecting newly created card
  145 |     async clickNewCardInInfoList(cardName) {
  146 |         await HandlingCardElements(this.infoList, cardName, this.page)
  147 |         await this.page.waitForTimeout(5000)
  148 |     }
  149 |
  150 |     //after selecting newly created card
  151 |     async performActionOnNewCard(cardName, labelName, addChecklistItems){
  152 |         await this.clickNewCardInInfoList(cardName)
  153 |         await this.cardTitleCheckbox.click();
  154 |         await this.page.waitForTimeout(2000)
  155 |         //await this.performMoveCardAction();
  156 |         await this.cardTitleCheckbox.click();
  157 |         await this.page.waitForTimeout(2000)
  158 |         await this.watchButton.click();
  159 |         await this.page.waitForTimeout(2000)
  160 |         await this.joinButton.click();
  161 |         await this.page.waitForTimeout(2000)
  162 |         await this.addMembersAction();
  163 |         await this.addLabelsAction(labelName);
  164 |         await this.addCheckList(addChecklistItems)
  165 |         await this.checkTheAddedCheckList()
  166 |       //  await this.addDates()
  167 |     }
  168 |     async closeOpenedCard(){
  169 |       await this.closeCardButton.click()
  170 |     }
  171 |
  172 |     // selecting already existing card
  173 |     async clickOldCardInInfoList(cardIndex) {
  174 |         await this.infoList.nth(cardIndex).click();
  175 |         await this.page.waitForTimeout(2000);
  176 |     }
  177 |
  178 |     //after selecting already existing card
  179 |     async performMoveCardAction(){
  180 |         await this.cardDropdown.click();
  181 |         await this.boardDropdown.click();
  182 |         const options = await this.page.$$("//div[@role='option']//li");
  183 |         await options[0].click()
  184 |         await this.page.getByTestId('move-card-popover-move-button').click()
  185 |     }
  186 |
  187 |     async performActionOnOldCard(cardIndex){
  188 |         await this.clickOldCardInInfoList(cardIndex);
  189 |         await this.cardTitleCheckbox.click();
  190 |         await this.performMoveCardAction();
  191 |     }
  192 |
  193 |     async deleteCreatedBoard(templateName){
> 194 |         const latestBoard = this.page.locator(`//a[contains(@title, '${templateName}')]`).click();
      |                                                                                           ^ Error: locator.click: Error: strict mode violation: locator('//a[contains(@title, \'1-on-1 Meeting Agenda\')]') resolved to 3 elements:
  195 |         const boardContainer = latestBoard.locator("xpath=ancestor::li");    // Find the parent container of the board and then locate the button inside it
  196 |         const deleteButton = boardContainer.locator("button[aria-label='Board actions menu']").last();
  197 |         await deleteButton.click();
  198 |         await this.page.getByRole('button', { name: 'Close board' }).click();
  199 |         await this.page.getByTestId('popover-close-board-confirm').click();
  200 |     }
  201 | }
  202 |
```